<#@ template debug="false" hostspecific="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>
<#
var types = new List<(string Type, string Store, int Shift)> {
    ("Byte",   "UInt16", 8),
    ("UInt16", "UInt32",   16),
    ("UInt32", "UInt64",  32),
    ("UInt64", "UInt128", 64), 
};
foreach (var t in types) {
    var fileContent = GeneratePairStruct(t.Type, t.Store, t.Shift);
    var outputFilePath = Host.ResolvePath($"{t.Type}Pair.cs");
    File.WriteAllText(outputFilePath, fileContent);
}
#>
LastGenerated = <#= DateTime.Now.ToString() #>
<#+
string GeneratePairStruct(string type, string store, int shift) {
    return $$"""
           // <auto-generated />
           namespace Ternary3.Numbers;
           
           internal readonly struct {{type}}Pair({{type}} negative, {{type}} positive)
           {
                private readonly {{store}} packed = ({{store}})((({{store}})negative << {{shift}}) | positive);
                public {{type}} Negative => ({{type}})(packed >> {{shift}});
                public {{type}} Positive => ({{type}})packed;
           }

           """;
}
#>

